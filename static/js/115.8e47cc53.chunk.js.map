{"version":3,"file":"static/js/115.8e47cc53.chunk.js","mappings":"kNAEaA,E,QAAWC,EAAAA,GAAH,slB,SCIRC,EAAY,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MACrC,OACE,SAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,GAArB,UACE,SAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,CAAEC,GAAI,EAAGC,GAAI,GACtBC,QAAS,CAAEF,GAAI,EAAGG,GAAI,EAAGF,GAAI,IAH/B,SAKGT,GACCA,EAAUY,KAAI,YAA+C,IAA5CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,GAAIC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,SAACX,EAAA,EAAD,CAAMG,GAAI,EAAGG,GAAI,EAAjB,UACE,UAACd,EAAD,YACE,UAAC,KAAD,CAAMoB,GAAE,kBAAaH,GAAMb,MAAO,CAAEiB,KAAMjB,GAA1C,WACE,gBACEkB,IAAG,yCAAoCJ,GACvCK,IAAKP,EACLQ,QAAQ,OACRC,MAAO,UAET,wBAAKT,QAEP,6CAAqBG,SAXAF,EAe5B,OAIV,C,sJC1Bc,SAASS,IACtB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAWF,EAAaG,IAAI,SAsBlC,OATAC,EAAAA,EAAAA,YAAU,WACHF,IAILN,EAAeM,IACfG,EAAAA,EAAAA,IAAcH,GAAUI,MAAK,SAAAC,GAAI,OAAIb,EAAea,EAAKC,QAAxB,IAClC,GAAE,CAACN,KAGF,UAAC,IAAD,CAAWO,OAAK,EAAhB,WACE,0BACE,kBAAMC,SAvBS,SAAAC,GACnBA,EAAEC,iBAOFX,EALKN,EAKW,CAAEkB,MAAOlB,GAJP,GAKnB,EAcK,WACE,kBACEmB,KAAK,OACLC,YAAY,gBACZC,KAAK,QACLC,MAAOtB,EACPuB,SAAU,SAAAP,GAAC,OAAIf,EAAee,EAAEQ,OAAOF,MAAMG,OAAlC,KAEb,6CAIJ,SAAC,IAAD,CAAWpD,UAAWyB,EAAaxB,MAAO4B,MAG/C,C","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CardItem = styled.li`\n  h3 {\n    color: #5338ec;\n    display: block;\n    text-align: center;\n    margin: 0px;\n    @media (max-width: 599px) {\n      margin-top: 7px;\n    }\n  }\n\n  img {\n    border: '1px solid';\n    border-radius: 20px;\n    height: 400px;\n    margin-bottom: 7px;\n\n    @media (max-width: 599px) {\n      display: block;\n      width: 260px;\n      margin: 0 auto;\n    }\n    @media (min-width: 1180px) {\n      width: 350px;\n      height: 450px;\n    }\n  }\n\n  span {\n    color: #5338ec;\n    display: block;\n    text-align: center;\n    margin-top: 7px;\n  }\n`;\n","import { Link } from 'react-router-dom';\n\nimport Box from '@mui/system/Box';\nimport Grid from '@mui/system/Unstable_Grid';\nimport { CardItem } from './MovieCard.styled';\n\nexport const MovieCard = ({ movieList, state }) => {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid\n        container\n        spacing={{ xs: 2, md: 3 }}\n        columns={{ xs: 2, sm: 8, md: 12 }}\n      >\n        {movieList &&\n          movieList.map(({ title, id, poster_path, release_date }) => {\n            return (\n              <Grid xs={2} sm={4} key={id}>\n                <CardItem>\n                  <Link to={`/movies/${id}`} state={{ from: state }}>\n                    <img\n                      src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                      alt={title}\n                      loading=\"lazy\"\n                      width={'100%'}\n                    />\n                    <h3>{title}</h3>\n                  </Link>\n                  <span>Release date: {release_date}</span>\n                </CardItem>\n              </Grid>\n            );\n          })}\n      </Grid>\n    </Box>\n  );\n};\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\n\nimport { getQueryMovie } from 'utils/movieApi';\n\nimport Container from '@mui/material/Container';\n\nexport default function Movies() {\n  const [movieSearch, setmovieSearch] = useState([]);\n  const [querySearch, setQuerySearch] = useState('');\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryUrl = searchParams.get('query');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!querySearch) {\n      setSearchParams('');\n      return;\n    }\n\n    setSearchParams({ query: querySearch });\n  };\n\n  useEffect(() => {\n    if (!queryUrl) {\n      return;\n    }\n\n    setQuerySearch(queryUrl);\n    getQueryMovie(queryUrl).then(data => setmovieSearch(data.results));\n  }, [queryUrl]);\n\n  return (\n    <Container fixed>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Search movies\"\n            name=\"query\"\n            value={querySearch}\n            onChange={e => setQuerySearch(e.target.value.trim())}\n          />\n          <button>Search</button>\n        </form>\n      </div>\n\n      <MovieCard movieList={movieSearch} state={location} />\n    </Container>\n  );\n}\n"],"names":["CardItem","styled","MovieCard","movieList","state","Box","sx","flexGrow","Grid","container","spacing","xs","md","columns","sm","map","title","id","poster_path","release_date","to","from","src","alt","loading","width","Movies","useState","movieSearch","setmovieSearch","querySearch","setQuerySearch","location","useLocation","useSearchParams","searchParams","setSearchParams","queryUrl","get","useEffect","getQueryMovie","then","data","results","fixed","onSubmit","e","preventDefault","query","type","placeholder","name","value","onChange","target","trim"],"sourceRoot":""}