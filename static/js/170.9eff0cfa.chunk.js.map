{"version":3,"file":"static/js/170.9eff0cfa.chunk.js","mappings":"+RAIaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,yEAIVE,GAAUF,EAAAA,EAAAA,GAAOG,EAAAA,EAAPH,CAAH,inC,mBCOL,SAASI,IAAgB,IAAD,MAC7BC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAGMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,SAE7CC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaV,GAASW,MAAK,SAAAC,GAAI,OAAIR,EAAgBQ,EAApB,GAChC,GAAE,CAACZ,IAEJ,IAAQa,EAA+CV,EAA/CU,YAAaC,EAAkCX,EAAlCW,MAAOC,EAA2BZ,EAA3BY,aAAcC,EAAab,EAAba,SAC1C,OACE,UAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,WACE,UAACxB,EAAD,CAAYyB,GAAId,EAAhB,WACE,2BACE,SAAC,MAAD,CAAae,MAAO,CAAEC,KAAM,aAE9B,SAACC,EAAA,EAAD,gCAGF,SAACL,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,UAACrB,EAAD,WACGgB,GACC,gBACEU,IAAG,yCAAoCV,GACvCW,IAAKV,EACLW,QAAQ,OACRC,MAAO,WAGT,gBACEH,IAAI,8DACJC,IAAKV,EACLW,QAAQ,OACRC,MAAO,WAGX,4BACE,wBAAKZ,KACL,wCAAgBa,KAAKC,MAAqB,GAAfb,GAA3B,QACA,sCACA,uBAAIC,KACJ,oCACA,SAAClB,EAAA,EAAD,CAAK+B,GAAI,CAAEC,QAAS,QAApB,mBACG3B,EAAa4B,cADhB,aACG,EAAqBC,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACxB,cAAYd,MAAO,CAAEe,YAAa,QAAlC,SACGF,GADKC,EADgB,eAUlC,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMf,GAAI,OAAV,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAI,UAAV,2BAGJ,SAAC,EAAAiB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport { Box } from '@mui/material';\n\nexport const StyledLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n`;\nexport const BoxCard = styled(Box)`\n  display: flex;\n\n  @media (max-width: 599px) {\n    flex-direction: column;\n  }\n  @media (max-width: 899px) {\n    flex-direction: column;\n  }\n\n  img {\n    display: block;\n    border: '1px solid';\n    border-radius: 20px;\n    height: 400px;\n    margin-bottom: 7px;\n\n    &:hover {\n      scale: 1.05;\n      outline: solid 2px blue;\n    }\n\n    @media (max-width: 599px) {\n      display: block;\n      width: 260px;\n      margin: 0 auto;\n    }\n    @media (min-width: 600px) {\n      width: 360px;\n      margin-right: 25px;\n    }\n    @media (max-width: 899px) {\n      display: block;\n      width: 360px;\n      margin-right: 25px;\n      margin: auto;\n      margin-bottom: 25px;\n    }\n    @media (min-width: 1180px) {\n      width: 450px;\n      height: 450px;\n      margin-right: 40px;\n    }\n  }\n\n  div {\n    width: 100%;\n    border-radius: 20px;\n    box-shadow: blue 0px 0px 10px;\n    padding: 20px;\n    text-align: center;\n    @media (max-width: 599px) {\n      margin: 18px auto;\n    }\n  }\n\n  h3 {\n    margin-bottom: 7px;\n  }\n\n  p {\n    text-align: start;\n  }\n`;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, Outlet, useParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\n\nimport { getMovieById } from 'utils/movieApi';\n\nimport { Box, Button } from '@mui/material';\nimport { MdArrowBack } from 'react-icons/md';\nimport { StyledLink } from './MovieDetails.styled';\nimport { Container } from '@mui/material';\nimport { BoxCard } from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState([]);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/home';\n\n  useEffect(() => {\n    getMovieById(movieId).then(data => setMovieDetails(data));\n  }, [movieId]);\n\n  const { poster_path, title, vote_average, overview } = movieDetails;\n  return (\n    <Container fixed>\n      <StyledLink to={backLinkHref}>\n        <span>\n          <MdArrowBack style={{ fill: 'blue' }} />\n        </span>\n        <Button>Previous page</Button>\n      </StyledLink>\n\n      <Container fixed>\n        <BoxCard>\n          {poster_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={title}\n              loading=\"lazy\"\n              width={'200px'}\n            />\n          ) : (\n            <img\n              src=\"https://media.tproger.ru/uploads/2018/04/docker-404-pic.jpg\"\n              alt={title}\n              loading=\"lazy\"\n              width={'200px'}\n            />\n          )}\n          <div>\n            <h1>{title}</h1>\n            <p>User score: {Math.floor(vote_average * 10)}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <Box sx={{ display: 'flex' }}>\n              {movieDetails.genres?.map(({ name, id }) => (\n                <p key={id} style={{ marginRight: '10px' }}>\n                  {name}\n                </p>\n              ))}\n            </Box>\n          </div>\n        </BoxCard>\n      </Container>\n\n      <h2>Additional information</h2>\n      <ul>\n        <li>\n          <Link to={'cast'}>Cast</Link>\n        </li>\n        <li>\n          <Link to={'reviews'}>Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n}\n"],"names":["StyledLink","styled","NavLink","BoxCard","Box","MovieDetails","movieId","useParams","useState","movieDetails","setMovieDetails","backLinkHref","useLocation","state","from","useEffect","getMovieById","then","data","poster_path","title","vote_average","overview","Container","fixed","to","style","fill","Button","src","alt","loading","width","Math","floor","sx","display","genres","map","name","id","marginRight","Suspense","fallback"],"sourceRoot":""}